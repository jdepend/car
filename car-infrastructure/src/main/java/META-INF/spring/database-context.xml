<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!-- Spring Data JPA的扫描器 -->
    <jpa:repositories 
    	base-package="car" 
    	entity-manager-factory-ref="entityManagerFactory4Query" 
    	transaction-manager-ref="transactionManager"/>
    
	<!-- 这里可让@Transcational注解生效 -->
    <tx:annotation-driven/>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

	<!-- 开始：Query库的配置 -->
	<!-- transactionManager默认事务管理器的名称，当@Transcational注解没有参数时就是用这个 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory4Query"/>
    </bean>

    <bean id="entityManagerFactory4Query" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="query"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${query.hibernate.sql.dialect}"/>
                <property name="generateDdl" value="${query.hibernate.sql.generateddl}"/>
                <property name="showSql" value="${query.hibernate.sql.show}"/>
            </bean>
        </property>
        <property name="dataSource" ref="dataSource4Query"/>
    </bean>


	<bean id="dataSource4Query" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${query.jdbc.driverclass}" />
		<property name="jdbcUrl" value="${query.jdbc.url}" />
		<property name="user" value="${query.jdbc.username}" />
		<property name="password" value="${query.jdbc.password}" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="${query.pool.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${query.pool.maxPoolSize}" />
		<!--初始化时获取多少个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="${query.pool.initialPoolSize}" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${query.pool.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${query.pool.acquireIncrement}" />
		<property name="maxStatements" value="${query.pool.maxStatements}" />
		<!--每隔多少秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${query.pool.idleConnectionTestPeriod}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${query.pool.acquireRetryAttempts}" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 
	　　保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
	　　获取连接失败后该数据源将申明已断开并永久关闭。Default: false--> 
		<property name="breakAfterAcquireFailure" value="false" />
		<!--因性能消耗大，请只在需要的时候使用它。如果设为true那么在每个connection提交的 
	　　时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
	　　等方法来提升连接测试的性能。Default: false --> 
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
    <!-- 结束：Query库的配置 -->

</beans>